1)Implement the C Program to create a child process using fork(), display parent 
and child process id. Child process will display the message “I am Child Process” 
and the parent process should display “I am Parent Process.
Ans:
#include <stdio.h>
#include <unistd.h>
int main() {
 pid_t pid = fork();
 if (pid == 0) {
 printf("I am Child Process, PID = %d\n", getpid());
 } else {
 printf("I am Parent Process, PID = %d\n", getpid());
 }
 return 0;
}
2)Write a C program to illustrate the concept of orphan process. Parent process 
creates a child and terminates before child has finished its task. So child process 
becomes orphan process. (Use fork(), sleep(), getpid(), getppid()).
Ans:
#include <stdio.h>
#include <unistd.h>
int main() {
 int pid = fork();
 if (pid > 0) {
 printf("Parent PID: %d\n", getpid());
 sleep(2);
 printf("Parent ends\n");
 } 
 else {
 sleep(5);
 printf("Child PID: %d, Parent PID: %d\n", getpid(), getppid());
 printf("Child became orphan\n");
 }
 return 0;
}
